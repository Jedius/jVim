snippet cl
	console.log(${1});
snippet ce
	console.error(${1});
snippet f
	function (${1}) {
		${2}
	};
snippet fc
	function(${1}) {
		${2}
	});
snippet switch
	switch(${1}) {
		case '${3}':
			${4}
			break;
		${5}
		default:
			${2}
	}
snippet case
	case '${1}':
		${2}
		break;
	${3}
# Anonymous Function
snippet fn
	function(${1}) {${2}};
# if
snippet if
	if (${1}) {${2}};
# if ... else
snippet ife
	if (${1}) {
		${2}
	} else{
		${3}
	};
snippet e
	else {
		${1}
	};
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
